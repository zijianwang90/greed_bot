# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
test_env/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Project-specific files
# Configuration files (keep example, ignore actual config)
config_local.py
.env.local
.env.production

# Database files
*.db
*.sqlite
*.sqlite3
bot.db
data.db

# Log files
*.log
logs/
log/

# Bot data and cache
cache/
data/cache/
temp/
tmp/

# Backup files
*.bak
*.backup
backup/

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store
Thumbs.db

# System files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Runtime files
*.pid
*.sock

# SSL certificates (if any)
*.pem
*.key
*.crt
*.cert

# Docker files (if using Docker)
docker-compose.override.yml

# Deployment files
deployment/
deploy/

# Test files and temporary data
test_data/
test_output/
test_*.py
*_test.py

# Financial data cache
market_data/
historical_data/
*.csv
*.json
data_cache/

# User data and sensitive information
user_data/
subscribers.json
users.json

# API keys and tokens (double protection)
tokens.txt
keys.txt
secrets.txt
credentials.json

# Monitoring and metrics
metrics/
monitoring/

# Jupyter notebooks (if any)
*.ipynb

# Virtual environment activation scripts
activate
activate.bat
activate.ps1

# Package files
*.tar.gz
*.zip
*.rar

# Local development files
local/
dev/
development/

# Error dumps
core
*.dump

# Performance profiling
*.prof

# Memory dumps
*.hprof

# Node.js (if using any Node tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Python wheels
*.whl

# Coverage reports
htmlcov/
.coverage

# Pytest
.pytest_cache/

# Documentation build
docs/_build/
docs/build/

# Temporary files created during development
scratch/
playground/
experiments/ 